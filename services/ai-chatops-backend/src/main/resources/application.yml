# AI ChatOps Backend Service Configuration

server:
  port: 3005
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  application:
    name: ai-chatops-backend
    version: 1.0.0
  
  # Database Configuration
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:chatops;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # H2 Console (for development)
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false
  
  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null

# MyBatis Configuration
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.ai.chatops.dto
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
    cache-enabled: true
    lazy-loading-enabled: true
    multiple-result-sets-enabled: true
    use-column-label: true
    use-generated-keys: true
    auto-mapping-behavior: partial

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# Application Specific Configuration
app:
  cors:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:3002
      - http://127.0.0.1:3000
      - http://127.0.0.1:3002
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  # LLM Integration Settings
  llm:
    provider: mock
    timeout: 30000
    max-tokens: 2000
    temperature: 0.7
  
  # Conversation Settings
  conversation:
    max-history-size: 50
    cleanup-interval: 3600000  # 1 hour in milliseconds
    max-concurrent: 1000
  
  # Analytics Settings
  analytics:
    enabled: true
    retention-days: 90
    batch-size: 100

# Logging Configuration
logging:
  level:
    root: INFO
    com.ai.chatops: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/ai-chatops-backend.log

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:chatops_dev;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  
  h2:
    console:
      enabled: true

logging:
  level:
    com.ai.chatops: DEBUG
    org.springframework.web: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: jdbc:h2:file:./data/chatops_prod;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
  
  h2:
    console:
      enabled: false

logging:
  level:
    root: WARN
    com.ai.chatops: INFO
  file:
    name: /var/log/ai-chatops/backend.log